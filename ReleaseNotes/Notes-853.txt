Build #853 -- Version 0.0.2.23
------------------------------

* Implement Rational And Variable Precision Floating Point Datatypes

Directory trunk:

AXISFNS.C:
GOTO.C:
PF_BAR.C:
PF_CIRCLE.C:
PF_COLONBAR.C:
PF_COMMA.C:
PF_CSLOPE.C:
PF_CSTAR.C:
PF_CSTILE.C:
PF_DARROW.C:
PF_DCARET.C:
PF_DELTASTILE.C:
PF_DOMINO.C:
PF_DSHOE.C:
PF_DSTILE.C:
PF_DTACK.C:
PF_DTACKJOT.C:
PF_EPSILON.C:
PF_EPSUND.C:
PF_EQUAL.C:
PF_EQUALUND.C:
PF_INDEX.C:
PF_IOTA.C:
PF_LCARET.C:
PF_LCARETUND.C:
PF_LSHOE.C:
PF_NDCARET.C:
PF_NEQUAL.C:
PF_NUCARET.C:
PF_PI.C:
PF_PLUS.C:
PF_QDOT.C:
PF_QUERY.C:
PF_RCARET.C:
PF_RCARETUND.C:
PF_RHO.C:
PF_ROOT.C:
PF_RSHOE.C:
PF_SLASH.C:
PF_SLOPE.C:
PF_SQUAD.C:
PF_STAR.C:
PF_STILE.C:
PF_TILDE.C:
PF_TIMES.C:
PF_UARROW.C:
PF_UCARET.C:
PF_USTILE.C:
PF_UTACK.C:
PN_PARSE.H:
PN_PARSE.PROTO:
PN_PARSE.Y:
PO_DIERESIS.C:
PO_DIJOT.C:
PO_DOT.C:
PO_JOTDOT.C:
PO_SLASH.C:
PO_SLOPE.C:
PRIMES.H:
PRIMFNS.C:
PRIMSPEC.C:
PRIMSPEC.H:
QF_AT.C:
QF_CR.C:
QF_DL.C:
QF_DR.C:
QF_ES.C:
QF_FMT.C:
QF_MF.C:
QF_NL.C:
QF_TF.C:
QF_UCS.C:
SC_SAVE.C:
TRANSLATE.C:
TYPEMOTE.C:
  Make code sensitive to RAT and VFP datatypes.

COMMON.C:
  Implement <signum> and <signumf> functions to capture that idiom
    in individual functions.

COMPRO.H:
  Include prototypes for new files.

CONVERT.C:
  Use <signum> and <signumf> functions instead of APL signum function.

CS_PARSE.Y:
  Improve comments.

CS_PROC.C:
  Merge common code into subroutine <ValidateFirstItemToken> that
    handles RAT and VFP datatypes.
  Return result from <CS_ENDFOR_Stmt> (renamed to <CS_ENDFOR_Stmt_EM>)
    so the caller can check for an error.

CUSTOMIZE.C:
  Define new indices and values in []IC.
  Define entries for []FPC.
  Format RAT and VFP numbers.

DATATYPE.H:
  Define entries for RAT and VFP numbers.

DEFINES.H:
  Define entries for []FPC.

DICTIONARY.C:
  Include files for prototype args/results.
  Make code sensitive to RAT and VFP datatypes.
  In DEBUG mode, display the heap entries so we can catch memory leaks.
  Define entries for new tokens to handle global numerics.

DISPLAY.C:
  Make code sensitive to RAT and VFP datatypes.
  Format RAT and VFP numbers.
  Handle infinity in RAT and VFP numbers.

DISPLAY.H:
  Update copyright year.
  Move definition of infinity char to <display.c>.

ENUMS.H:
  Define new exceptions.

EXCEPT.C:
  Define routine to return exception code as a string.
  Define new exceptions.

EXECDFN.C:
  Handle new tokens for global numerics.

EXECMFN.C:
EXECMFN.H:
  Define new magic functions.

EXTERNS.H:
  Define new indices and values in []IC.
  Define entries for []FPC.
  Define table for type promotion code.
  Define global numeric constants.

FREE.C:
  Handle new tokens for global numerics.
  Make code sensitive to RAT and VFP datatypes.

GETFNS.C:
  Merge common code into subroutine <ValidateFirstItemToken> that
    handles RAT and VFP datatypes.
  Make code sensitive to RAT and VFP datatypes.
  Handle new tokens for global numerics.

HEADERS.H:
  Include new files for RAT and VFP numbers.

INIFILE.C:
  Define entries for []FPC.
  Make code sensitive to RAT and VFP datatypes.

INIPARSER.C:
  Include files for prototype args/results.

INITDATA.C:
  Define routines to initialize global numerics constants.

MACROS.H:
  Define macros appropriate to global numerics.
  Define macros for detecting various forms of infinity.

MAIN.C:
  Initialize global numerics constants.

MAIN.RC:
  Define entries for []FPC.

MAKEFILE.INC:
  Note need for the caller to define MPIR and MPFR.
  Define entries for MPIR, MPFR, and FLINT libraries and headers.
  Define entries for new files.

MAKEFILE.PRO:
  Define entry for MPFR.

MAKEFILE.SRC:
  Define entries for new files.

MPFNS.C:
  Define new file for mp[zqf] cover functions.

MPIFNS.C:
MPIFNS.H:
  Define new files for mp[zqf] infinity functions.

NARS2000.32.VCPROJ:
NARS2000.64.VCPROJ:
  Define new files for RAT and VPF numbers.

PERTAB.H:
  Initialize VFP random number generator.
  Define the items to destroy when a tab is closed.
  Define pertab local values for Pi and e.

PL_PARSE.Y:
  Return result from <CS_ENDFOR_Stmt> (renamed to <CS_ENDFOR_Stmt_EM>)
    so the caller can check for an error.
  Handle new tokens for global numerics.

REBAR.C:
  Document Point Notation.

REFCNT.C:
  Improve formatting.

RESDEBUG.C:
RESDEBUG.H:
  Define heap allocation debugging function.

RESOURCE.H:
  Define entries for []FPC.

SC_LOAD.C:
  Handle various forms of infinity.
  Make code sensitive to RAT and VFP datatypes.

SESSMAN.C:
  Initialize PTD vars.
  Define F6 for displaying the heap entries.

STARTADDR.H:
  Define new entry points to aid in debugging.

STRAND.C:
  Handle new tokens for global numerics.
  Make code sensitive to RAT and VFP datatypes.

SYMBOLNAMES.H:
  Define entry for infinity in terms of new equate.

SYMTAB.C:
  Define STE signature for aid in debugging.

SYMTAB.H:
  Make code sensitive to RAT and VFP datatypes.
  Define STE signature for aid in debugging.

SYSVARS.C:
  Define entries for []FPC.
  Handle new tokens for global numerics.
  Make code sensitive to RAT and VFP datatypes.

SYSVARS.H:
  Define entries for []FPC.

TABCTRL.C:
  Destroy PTD entries when closing a tab.

TOKENIZE.C:
  Make code sensitive to RAT and VFP datatypes.
  Handle new tokens for global numerics.

TOKENS.H:
  Handle new tokens for global numerics.

TYPEMOTE.H:
  Define type demotion table entries.

TYPES.H:
  Make code sensitive to RAT and VFP datatypes.

YYFNS.C:
  Handle new tokens for global numerics.


Directory trunk\htdocs:

INDEX-BODY.AHTML:
  Document new RAT and VFP datatypes.


Directory trunk\WineHQ:

EDITCTRL.C:
  Free the undo buffer when destroying the window.

LOCAL.H:
  Define pseudo-entries for RAT and VFP so as to
    handle prototype args and results.
