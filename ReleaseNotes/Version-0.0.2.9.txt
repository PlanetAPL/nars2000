Version 0.0.2.9 consists of the following Builds:


Build #642 -- Version 0.0.2.9
-----------------------------

* 64-bit Stack

Directory trunk:

MAIN.DEF:
  Delete in favor of separate 32- and 64-bit versions.

MAIN32.DEF:
  Same as old <main.def>.

MAIN64.DEF:
  Same as old <main.def> except it has a much larger stack.


Build #641 -- Version 0.0.2.9
-----------------------------

* 64-bit Issues

Directory trunk:

SC_LOAD.C:
  Use proper declaration for handle in 64-bit environment.


Build #640 -- Version 0.0.2.9
-----------------------------

* Use Case of Saved Workspace Name When Loading

Directory trunk:

SC_LOAD.C:
  When loading a workspace, ensure the workspace name
    used in []WSID and the Workspace Tab has the same case
    as the saved name instead of the name used in the
    )LOAD/)XLOAD command.


Build #639 -- Version 0.0.2.9
-----------------------------

* Fix Bugs And Streamline Handling of Control Structures

Directory trunk:

CS_PARSE.H:
  Update copyright year.
  Define link for IF/ELSEIF/ANDIF/ORIF/UNTIL/WHILE stmts.

CS_PARSE.Y:
  Update copyright year.
  Use IF/.../WHILE stmt link when calling <CS_ChainTokens> for
    IF/.../WHILE stmts.
  Improve comments.
  Move token chaining from outer Control Structures to the individual
    components.
  Include token chain between <ELSEIF> and <OrIfAndIf>.
  Include token chain between <ElseIfRec> and <ElseIf>.
  Fix Bug:  Include missing case in <ElseIfElse> of <ElseIfRec ELSE SOSStmts>.
  Include token chain between <ElseIfRec> and <ELSE>.
  Include token chain between <UNTIL> and <OrIfAndIf>.
  In <ANON_CTRL_STRUC>, split out the Original Line/Stmt/Token #s from the
    ones to which it points (Next) using a union for the Original #s so
    that the dynamic values can be set initially and subsequently the const
    values can be used everywhere else.

CS_PROC.C:
  Update copyright year.
  In <ANON_CTRL_STRUC>, split out the Original Line/Stmt/Token #s from the
    ones to which it points (Next) using a union for the Original #s so
    that the dynamic values can be set initially and subsequently the const
    values can be used everywhere else.
  Improve comments.
  In <CS_ChainTokens>, make it clear that that function reads Arg1->Orig.c and
    writes into Arg2->Next.
  In <CS_SetTokenCLIndex>, make it clear that the Orig.c token is being set.
  Rename various functions to make it clearer whether it works on the
    Original (_ORIG suffix) or Next (_NEXT suffix) values in an
    ANON_CTRL_STRUC, and whether it is setting the stmt At or After a given
    token.

EXECMFN.C:
IMMEXEC.C:
PF_UTACKJOT.C:
SAVEFCN.C:
  In <ANON_CTRL_STRUC>, split out the Original Line/Stmt/Token #s from the
    ones to which it points (Next) using a union for the Original #s so
    that the dynamic values can be set initially and subsequently the const
    values can be used everywhere else.

EXTERNS.H:
  Move <gDbgLvl> to the Debug Value section.
  Define <gChnLvl> to aid in debugging <CS_ChainTokens>.

STARTADDR.H:
  Rename functions to match the new naming convention in <cs_proc.c>.

TOKENIZE.C:
  Use <tkData> to pass data to subfunctions instead of <tkLongest>
    as that name is no longer the longest in <tkData>.
  In <fnClnDone>, omit duplicate check for Syntax Coloring.
  In <ANON_CTRL_STRUC>, split out the Original Line/Stmt/Token #s from the
    ones to which it points (Next) using a union for the Original #s so
    that the dynamic values can be set initially and subsequently the const
    values can be used everywhere else.

TOKENS.H:
  Improve comments.
  In <ANON_CTRL_STRUC>, split out the Original Line/Stmt/Token #s from the
    ones to which it points (Next) using a union for the Original #s so
    that the dynamic values can be set initially and subsequently the const
    values can be used everywhere else.


Build #638 -- Version 0.0.2.9
-----------------------------

* Fix Bug Which Returns The Wrong Error Message When Executing A
  Function Via Each Or Outer Product Fails

Directory trunk:

PO_DIERESIS.C:
  Fix Bug:  In <ExecFuncOnToken_EM>, if the execute of the function
    fails (with its own error message), the code mistakenly falls
    through to a VALUE ERROR, thus signalling the wrong error message.

PRIMFNS.C:
  In <IsTknTypeVar>, handle constant var cases.


Build #637 -- Version 0.0.2.9
-----------------------------

* Fix Bug When Forwarding Function Key Messages

Directory trunk:

EDITFCN.C:
  Fix Bug:  When in the Function Editor's Edit Ctrl, send function
    key messages to the Session Manager via the PTD struc, not
    hWndParent (which is the Function Editor as we're in the Edit Ctrl).

SESSMAN.C:
  Fix typo in comment.


Build #636 -- Version 0.0.2.9
-----------------------------

* Document How To Debug Linker Errors

Directory trunk:

MAKEFILE.INC:
  Define LINKDEBUG= equate to document how to debug problems with
    symbols.

MAKEFILE.SRC:
  Fix typo in comment.


Build #635 -- Version 0.0.2.9
-----------------------------

* Fix Bug:  When Invoking A UDFO For Editing Which Is Already Being Edited,
  Sometimes A New Instance Is Created

Directory trunk:

EDITFCN.C:
  Fix Bug:  In <FEWndProc> when destroying an editing window, if the window
    being destroyed is at the top of the editing chain, change it to the
    previous window handle.


Build #634 -- Version 0.0.2.9
-----------------------------

* Fix Bug:  Allow Certain Derived Functions To Be Used With Monadic Ops

PL_PARSE.Y:
  Fix Bug:  Split out monadic left operands from the dyadics so as to
    allow <Drv1Func>/<Drv3Func>/<Drv4Func>s to be used as the operand
    to a monadic operator.
  Improve comments.
  Split out <(error)>/<(Drv1Func)>/<(Drv5Func)> from <LeftOper> and
    move them into <ParenFunc>.


Build #633 -- Version 0.0.2.9
-----------------------------

* Use Environment Variable to Locate Certain Executables

Directory trunk:

COMMON.C:
  In <GetModuleFileNames>, get the COMCTL32.DLL file version for
    later testing.

EXTERNS.H:
  Save the COMCTL32.DLL file version # in a global for later testing.

MAIN.C:
  Fix Bug:  When NARS2000 is used with a COMCTL32.DLL whose version #
    is less than 6.0 (typically on a Wine distribution), an unexpected
    WM_NOTIFY (NM_TOOLTIPSCREATED) is sent from the Tab Ctrl tooltip
    which doesn't occur with version 6.0.

MAKEFILE.INC:
  Note the dependency of <main.rc> on the appropriate manifest file.

REBAR.C:
  Tell each of the Toolbars about the common Tooltip Ctrl.
  In order to support COMCTL32.DLL version 5.81 on Wine platforms
    we need to specify more extended styles and such for Toolbars
    so as to display Tooltips on Toolbars.
  When initializing each Band, use a two pixel margin top and
    bottom on all buttons so as to display the bottom shadow on
    the buttons.
  In <FW_RBWndProc> and <LW_RBWndProc>, fill in a <cbSize> for
    TOOLINFOW structs which is appropriate to the actual version
    of COMCTL32.DLL.
  Improve comments.
  In <LW_RBWndProc>/<WM_MOUSEMOVE> don't send the <TTM_GETTITLE>
    message to COMCTL32.DLL if the dll doesn't support it.  Instead
    fill in appropriate default values in the return struct.

VERSION.RC:
  Increment version to 0.0.2.9.
